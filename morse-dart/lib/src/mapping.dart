List<(String char, String code)> charCodes = [
  ('A', '.-'),
  ('B', '-...'),
  ('C', '-.-.'),
  ('D', '-..'),
  ('E', '.'),
  ('F', '..-.'),
  ('G', '--.'),
  ('H', '....'),
  ('I', '..'),
  ('J', '.---'),
  ('K', '-.-'),
  ('L', '.-..'),
  ('M', '--'),
  ('N', '-.'),
  ('O', '---'),
  ('P', '.--.'),
  ('Q', '--.-'),
  ('R', '.-.'),
  ('S', '...'),
  ('T', '-'),
  ('U', '..-'),
  ('V', '...-'),
  ('W', '.--'),
  ('X', '-..-'),
  ('Y', '-.--'),
  ('Z', '--..'),
  ('a', '.-'),
  ('b', '-...'),
  ('c', '-.-.'),
  ('d', '-..'),
  ('e', '.'),
  ('f', '..-.'),
  ('g', '--.'),
  ('h', '....'),
  ('i', '..'),
  ('j', '.---'),
  ('k', '-.-'),
  ('l', '.-..'),
  ('m', '--'),
  ('n', '-.'),
  ('o', '---'),
  ('p', '.--.'),
  ('q', '--.-'),
  ('r', '.-.'),
  ('s', '...'),
  ('t', '-'),
  ('u', '..-'),
  ('v', '...-'),
  ('w', '.--'),
  ('x', '-..-'),
  ('y', '-.--'),
  ('z', '--..'),
  ('1', '.----'),
  ('2', '..---'),
  ('3', '...--'),
  ('4', '....-'),
  ('5', '.....'),
  ('6', '-....'),
  ('7', '--...'),
  ('8', '---..'),
  ('9', '----.'),
  ('0', '-----'),
  ('.', '.-.-.-'),
  (':', '---...'),
  (',', '--..--'),
  (';', '-.-.-'),
  ('?', '..--..'),
  ('=', '-...-'),
  ('\'', '.----.'),
  ('/', '-..-.'),
  ('!', '-.-.--'),
  ('-', '-....-'),
  ('_', '..--.-'),
  ('"', '.-..-.'),
  ('(', '-.--.'),
  (')', '-.--.-'),
  ('(', '-.--.-'),
  ('\$', '...-..-'),
  ('&', '.-...'),
  ('@', '.--.-.'),
  ('+', '.-.-.'),
  ('Á', '.--.-'),
  ('Ä', '.-.-'),
  ('É', '..-..'),
  ('Ñ', '--.--'),
  ('Ö', '---.'),
  ('Ü', '..--'),
  (' ', '/'),
];

final charCodeMap =
    Map.fromIterable(charCodes, key: (cc) => cc.$1, value: (cc) => cc.$2);

final codeCharMap =
    Map.fromIterable(charCodes, key: (cc) => cc.$2, value: (cc) => cc.$1);
